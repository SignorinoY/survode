% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survode.R
\name{survode}
\alias{survode}
\title{Fit Survial Models via Ordinary Differential Equations}
\usage{
survode(formula, data, df, degree = 3, knots = "uniform", init, control, ...)
}
\arguments{
\item{formula}{a formula object, with the response on the left of a \code{~}
operator, and the terms on the right. The response must be a survival
object as returned by the \code{\link{Surv}} function.}

\item{data}{a data frame in which to interpret the variables named in the
\code{formula}.}

\item{df}{the number of degrees of freedom for the spline.}

\item{degree}{the degree of the spline. Default is 3.}

\item{knots}{the knots of the spline, either \code{"uniform"} or
\code{"quantile"}. For \code{"uniform"}, the knots are equally spaced
between 0 and the maximum observed time. For \code{"quantile"}, the knots
are equally spaced between the quantiles of the observed times. Default is
\code{"uniform"}.}

\item{init}{a vector of initial values for the parameters. Default initial
value is zero for all parameters.}

\item{control}{Object of class \link{survode_control} containing
control parameters for the fitting algorithm. Default is
\code{survode_control(...)}.}

\item{...}{Other arguments passed to \code{\link{survode_control}}.}
}
\description{
Fit Survial Models via Ordinary Differential Equations
}
\examples{
library(simsurv)
library(survode)

# Create a simple data set
set.seed(42)
cov <- data.frame(
  id = 1:400,
  trt = stats::rbinom(400, 1L, 0.5),
  hormon = stats::rnorm(400, 0, 1)
)
dat <- simsurv(
  lambdas = 0.1, gammas = 1.5, betas = c(trt = -0.5, hormon = 1.0),
  x = cov, maxt = 5
)
sim <- merge(cov, dat)

# Fit a Cox model with a spline for the baseline hazard
fit <- survode(Surv(eventtime, status) ~ trt + hormon, data = sim, df = 5)
fit$coefficients$beta

# Predict the baseline hazard at times (0, 5)
bh <- predict(fit, type = "hazard", time = seq(0, 5, length.out = 100))
par(mfrow = c(1, 2), cex = 0.85)
plot(
  bh$time, bh$basehaz,
  type = "l", xlab = "Time", ylab = "Baseline hazard"
)
lines(bh$time, 0.15 * bh$time^0.5, col = "red")
plot(
  bh$time, bh$cumhaz,
  type = "l", xlab = "Time", ylab = "Cumulative baseline hazard"
)
lines(bh$time, 0.1 * bh$time^1.5, col = "red")
}
